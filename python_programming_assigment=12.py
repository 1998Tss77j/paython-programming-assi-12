# -*- coding: utf-8 -*-
"""python programming assigment=12

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-m4Fkf73cygfAHQJMBV08sw6okgWku7j

1. Write a Python program to Extract Unique values dictionary values?
"""

def extract_unique_values(dictionary):
    # Get all the values from the dictionary
    values = list(dictionary.values())

    # Convert values into a set to remove duplicates
    unique_values = set(values)

    # If you want the result as a list, convert the set back into a list
    unique_values_list = list(unique_values)

    return unique_values_list

# Example usage:
sample_dict = {
    'a': 1,
    'b': 2,
    'c': 1,
    'd': 3,
    'e': 2,
}

unique_values_list = extract_unique_values(sample_dict)
print(unique_values_list)

"""2. Write a Python program to find the sum of all items in a dictionary?"""

def sum_of_dictionary_items(dictionary):
    total_sum = sum(dictionary.values())
    return total_sum

# Example usage:
sample_dict = {
    'a': 10,
    'b': 20,
    'c': 30,
    'd': 40,
}

result = sum_of_dictionary_items(sample_dict)
print("Sum of items in the dictionary:", result)

"""3. Write a Python program to Merging two Dictionaries?"""

def merge_dictionaries(dict1, dict2):
    # Create a copy of the first dictionary to avoid modifying it directly
    merged_dict = dict1.copy()
    merged_dict.update(dict2)
    return merged_dict

# Example usage:
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

merged_dict = merge_dictionaries(dict1, dict2)
print("Merged dictionary:", merged_dict)

"""4. Write a Python program to convert key-values list to flat dictionary?"""

def convert_to_flat_dictionary(key_value_list):
    flat_dict = {key: value for key, value in key_value_list}
    return flat_dict

# Example usage:
key_value_list = [('a', 1), ('b', 2), ('c', 3), ('d', 4)]

flat_dict = convert_to_flat_dictionary(key_value_list)
print("Flat dictionary:", flat_dict)

"""5. Write a Python program to insertion at the beginning in OrderedDict?"""

from collections import OrderedDict

def insert_at_beginning(ordered_dict, key, value):
    # Remove the last item (insertion order) from the OrderedDict
    ordered_dict.popitem(last=False)

    # Insert the new key-value pair at the beginning
    ordered_dict.update({key: value})

# Example usage:
ordered_dict = OrderedDict([('a', 1), ('b', 2), ('c', 3)])

print("Original OrderedDict:", ordered_dict)

# Insert a new key-value pair at the beginning
insert_at_beginning(ordered_dict, 'd', 4)

print("Modified OrderedDict:", ordered_dict)

"""6. Write a Python program to check order of character in string using OrderedDict()?"""

from collections import OrderedDict

def check_order_of_characters(string):
    # Create an OrderedDict to maintain the order of characters
    ordered_dict = OrderedDict()

    # Insert characters into the OrderedDict
    for char in string:
        ordered_dict[char] = None

    # Compare the keys of OrderedDict with the original string
    for key, _ in ordered_dict.items():
        if key not in string:
            return False

    return True

# Example usage:
input_string = "hello"
result = check_order_of_characters(input_string)

if result:
    print("The characters in the string are in order.")
else:
    print("The characters in the string are NOT in order.")

"""7. Write a Python program to sort Python Dictionaries by Key or Value?"""

def sort_dictionary_by_key(dictionary):
    sorted_dict = dict(sorted(dictionary.items(), key=lambda item: item[0]))
    return sorted_dict

# Example usage:
sample_dict = {'b': 2, 'a': 1, 'd': 4, 'c': 3}

sorted_by_key = sort_dictionary_by_key(sample_dict)
print("Sorted by key:", sorted_by_key)